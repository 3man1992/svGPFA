:mod:`stats.sampler`
====================

.. py:module:: stats.sampler


Module Contents
---------------

.. py:class:: Sampler

   .. method:: sampleInhomogeneousPP_thinning(self, intensityFun, T, dt=0.03)


      Thining algorithm to sample from an inhomogeneous point process. Algorithm 2 from Yuanda Chen (2016). Thinning algorithms for simulating Point Prcesses.

      Parameters
      ----------

      intensityFun: function
                    Intensity function of the point process.

      T: double
         The returned samples of the point process will be in [0, T]

      nGrid: integer
             number of points in the grid used to search for the maximum of intensityFun.

      Returns
      -------

      inhomogeneous: list
          samples of the inhomogeneous point process with intensity function intensityFun.
      homogeneous: list
          samples of the homogeneous that was filtered to generate the inhomogeneous point process.


   .. method:: sampleInhomogeneousPP_timeRescaling(self, intensityFun, T, dt=0.03)


      Time rescaling algorithm to sample from an inhomogeneous point process. Chapter 2 from Uri Eden papers/numericalMethods/uri-eden-point-process-notes.pdf

      Parameters
      ----------

      intensityFun: function
                    Intensity function of the point process.

      T: double
         The returned samples of the point process will be in [0, T]

      nGrid: integer
             number of points in the grid used to search for spike times.

      Returns
      -------

      list
          samples of the inhomogeneous point process with intensity function intensityFun.



